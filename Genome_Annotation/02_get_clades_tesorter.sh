#!/usr/bin/env bash

#================================================================
#
# DESCRIPTION:
#   This script uses TEsorter to classify transposable elements (TEs) 
#   into clades based on sequence similarity using the rexdb-plant database. 
#   The classified output files are saved to the specified output directory.
#
# USAGE:
#   sbatch 02_get_clades_tesorter.sh
#
# REQUIREMENTS:
#   - TEsorter version 1.3.0 (via Apptainer container)
#   - Access to a compute cluster with SLURM scheduler
#
# INPUT:
#   - Transposable element sequences (FASTA): $INPUT
#
# OUTPUT:
#   - Clade classification files in: $OUTDIR
#
# NOTES:
#   - Ensure the input FASTA file is available and formatted correctly.
#   - Update paths and email address if necessary.
#================================================================

#SBATCH --cpus-per-task=1
#SBATCH --time=01:00:00
#SBATCH --mem=8G
#SBATCH --job-name=get_clades_tesorter
#SBATCH --mail-user=fammi.parokkaran@students.unibe.ch
#SBATCH --mail-type=end
#SBATCH --output=/data/users/fparokkaran/assembly_annotation_course/annotation/logfile/02_get_clades_tesorter_output_%A.o
#SBATCH --error=/data/users/fparokkaran/assembly_annotation_course/annotation/logfile/02_get_clades_tesorter_error_%A.e
#SBATCH --partition=pibu_el8

# Working directory
WORKDIR="/data/users/fparokkaran/assembly_annotation_course"

# The path to the input file, which is a FASTA file containing transposable element sequences 
# identified by the EDTA pipeline. This file will be used by TEsorter to assign each TE to its clade.
INPUT="$WORKDIR/genome_annotation/outputs/01_EDTA/assembly.fasta.mod.EDTA.raw/LTR/assembly.fasta.mod.LTR.intact.fa"
# The output directory where the classified TE sequences will be stored.
# The output will contain files generated by TEsorter after clade assignment.
OUTDIR="$WORKDIR/genome_annotation/outputs/02_tesorter_TE"

# The path to the Apptainer container that includes the TEsorter software and its dependencies.
CONTAINER="/data/courses/assembly-annotation-course/containers2/TEsorter_1.3.0.sif"

# Go to working directory and create output directory
mkdir -p $OUTDIR
# Change to the working directory before executing the pipeline
cd $WORKDIR

# Run TEsorter using Apptainer to classify transposable elements.
# The command runs inside the container with the following options:
# - -C: Clear the container's cache (useful for fresh execution).
# - -H: Bind the working directory to the container, allowing access to the input files and output directories.
# - --writable-tmpfs: Use temporary writable storage to improve performance.
# - -u $CONTAINER: Specify the container image to be used (TEsorter).
# - TEsorter $INPUT -db rexdb-plant: The TEsorter command, specifying the input file and the database (rexdb-plant).
apptainer exec -C -H $WORKDIR \
  --writable-tmpfs -u $CONTAINER \
  TEsorter $INPUT -db rexdb-plant

mv assembly.fasta.mod.LTR.intact.fa.rexdb-plant.* $OUTDIR